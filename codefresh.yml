version: '1.0'
steps:

  tests:
    image: alpine:latest
    commands:
      - date

  docker_build:
    title: building image
    type: build
    working_directory: src/mock_http
    image_name: lukmdo/mock-http

  docker_push:
    type: push
    title: Step Title
    description: Free text description
    candidate: ${{build_step_name}}
    tag: latest  # ${{CF_BRANCH}}
    image_name: lukmdo/mock-http
    when:
      branch:
        only:
          - master

  helm_push:
    image: codefresh/cfstep-helm:2.8.2
    commands:
      - kubectl config get-contexts
    environment:
      - ACTION=push
      - CHART_REF=charts/mock-http

  helm_deploy:
    image: codefresh/cfstep-helm:2.8.2
    environment:
    - CHART_REF=charts/mock-http
    - RELEASE_NAME=dev-mock-http
    - KUBE_CONTEXT=lukmdo-sauce@core-services
    when:
      branch:
        only:
          - deploy
          - master


#  deploy_to_k8:
#    title: deploying to cluster
#    type: deploy
#    kind: kubernetes
#    ## cluster name as the shown in account's integration page
#    cluster:  --my-cluster-name--
#    # desired namespace
#    namespace: default
#
#    ## Two ways to distinguish which deployment YAML to deploy - service or file_path:
#    # The kubernetes service that associated with the deployment using selector
#    service: --my-service--
#    # Path to deployment.yml location inside the image volume
#    file_path: ./deployment.yml
#    # In seconds, how long the step will wait until the rolling update is complete (default is 120)
#    timeout: 150
#    # Candidate is optional, if not specified will redeploy the same image that specified in the deployment file
#    # When candidate exist it should have both: image and registry
#    candidate:
#      # The image that will replace the original deployment image
#      # The image that been build using Build step
##      image: ${{build_step}}
#      image: ${{build_step}}
#      # The registry that the user's Kubernetes cluster can pull the image from
#      # Codefresh will generate (if not found) secret and add it to the deployment so the Kubernetes master can pull it
#      registry: dockerhub
#    # Condition to run the step
#    when:
#      branch:
#        only:
#          - master
